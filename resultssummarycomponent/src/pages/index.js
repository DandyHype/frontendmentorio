import Head from "next/head";
import Image from "next/image";
import localFont from "next/font/local";
import styles from "@/styles/Home.module.css";
import { useEffect, useState } from "react";

const hankenGrotesk = localFont({
  src: "./fonts/HankenGrotesk-VariableFont_wght.ttf",
  variable: "--fnt-primary",
  weight: "100 900",
});

export default function Home() {
  
 

  return (
    <>
      <Head>
        <title>Frontend Mentor | Results summary component</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32.png" />
      </Head>
      <main className={`${styles.app_container} ${hankenGrotesk.variable}`}>
        <section className={styles.app_result}>
          <p className={styles.result_title}>Your Result</p>
          <div className={styles.score_circle}><span className={styles.my_score}>76</span> of 100</div>
          <p className={styles.score_verbose}>Great</p>
          <p className={styles.score_description}>You scored higher than 65% of the people who have taken these tests.</p>
        </section>
        <p className={styles.summary_title}>Summary</p>
        <ul className={styles.list}>
          <List />
        </ul>
        <Button />
      </main>

    </>
  );
}



function List() {
  const [ data, setData] = useState(null);
  const [ loading, setLoading ] = useState(true);
  const [ error, setError] = useState(null);

  useEffect( () => {
    const fetchData = async () => {
      try {
        const response = await fetch('/data.json');
        if(!response.ok){
          throw new Error('Network response was not ok');
        }

        const data = await response.json();
        setData(data);
      } catch(err) {
        setError(`Error: ${err.message}`);
      } finally {
        setLoading(false);
      }
    };
    fetchData();
  }, [])

  if(loading) return <div>Loading...</div>;
  if(error) return <div>{error}</div>;

  return data.map((item) => (
   <li key={item.category} className={styles.list_item} style={{background: item.bgcolor}}>
      <Image 
        className={styles.cat_icon}
        src={item.icon}
        alt="Custom Icon"
        width={20}
        height={20}
      />
      <p className={styles.category_name} style={{color: item.color}}>{item.category}</p>
      <p className={styles.cat_score}><span className={styles.cat_myscore}>{item.score}</span> / 100</p>

   </li>
  ));

}

function Button(){
  return <button className={styles.btn}>Continue</button>
}